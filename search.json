[{"path":[]},{"path":"https://darwin-eu.github.io/CohortCharacteristics/CONTRIBUTING.html","id":"filing-issues","dir":"","previous_headings":"","what":"Filing issues","title":"Contributing to CohortCharacteristics","text":"found bug, question, want suggest new feature please open issue. reporting bug, reprex much appreciated. contributing either documentation code, please make sure open issue beforehand identify needs done .","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/CONTRIBUTING.html","id":"documenting-the-package","dir":"","previous_headings":"Filing issues","what":"Documenting the package","title":"Contributing to CohortCharacteristics","text":"Run update check package documentation: Note devtools::check_man() return warnings. commit limited package documentation, running sufficient (although running devtools::check() always generally good idea submitting pull request.","code":"devtools::document()  devtools::run_examples() devtools::build_readme() devtools::build_vignettes() devtools::check_man()"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/CONTRIBUTING.html","id":"run-tests","dir":"","previous_headings":"Filing issues","what":"Run tests","title":"Contributing to CohortCharacteristics","text":"starting contribute code, first make sure package tests passing. raise issue going (although please first make sure packages imports suggests installed). contribute code, make sure current tests add continue pass. package tests can run together : Code add new functionality accompanied tests. Code coverage can checked using:","code":"devtools::test() # note, you may first have to detach the package # detach(\"package:CohortCharacteristics\", unload=TRUE) devtools::test_coverage()"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/CONTRIBUTING.html","id":"adhere-to-code-style","dir":"","previous_headings":"Filing issues","what":"Adhere to code style","title":"Contributing to CohortCharacteristics","text":"Please adhere code style adding new code. though restyle code unrelated pull request make code review difficult.","code":"lintr::lint_package(\".\",                     linters = lintr::linters_with_defaults(                       lintr::object_name_linter(styles = \"camelCase\")                     ) )"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/CONTRIBUTING.html","id":"run-check-before-opening-a-pull-request","dir":"","previous_headings":"Filing issues","what":"Run check() before opening a pull request","title":"Contributing to CohortCharacteristics","text":"opening pull request please make sure run: warnings seen.","code":"devtools::check()"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://darwin-eu.github.io/CohortCharacteristics/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://darwin-eu.github.io/CohortCharacteristics/articles/summarise_characteristics.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Summarise patient characteristics","text":"example ’re going summarise characteristics individuals ankle sprain, ankle fracture, forearm fracture, hip fracture using Eunomia synthetic data. ’ll begin creating study cohorts.","code":"library(duckdb) library(CDMConnector) library(dplyr, warn.conflicts = FALSE) library(ggplot2) library(CodelistGenerator) library(PatientProfiles) library(CohortCharacteristics)  con <- dbConnect(duckdb(), dbdir = eunomiaDir()) cdm <- cdmFromCon(   con = con, cdmSchem = \"main\", writeSchema = \"main\", cdmName = \"Eunomia\" )  cdm <- generateConceptCohortSet(   cdm = cdm,   name = \"injuries\",   conceptSet = list(     \"ankle_sprain\" = 81151,     \"ankle_fracture\" = 4059173,     \"forearm_fracture\" = 4278672,     \"hip_fracture\" = 4230399   ),   end = \"event_end_date\",   limit = \"all\" ) settings(cdm$injuries) #> # A tibble: 4 × 6 #>   cohort_definition_id cohort_name    limit prior_observation future_observation #>                  <int> <chr>          <chr>             <dbl>              <dbl> #> 1                    1 ankle_sprain   all                   0                  0 #> 2                    2 ankle_fracture all                   0                  0 #> 3                    3 forearm_fract… all                   0                  0 #> 4                    4 hip_fracture   all                   0                  0 #> # ℹ 1 more variable: end <chr> cohortCount(cdm$injuries) #> # A tibble: 4 × 3 #>   cohort_definition_id number_records number_subjects #>                  <int>          <int>           <int> #> 1                    1           1915            1357 #> 2                    2            464             427 #> 3                    3            569             510 #> 4                    4            138             132"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/articles/summarise_characteristics.html","id":"summarising-study-cohorts","dir":"Articles","previous_headings":"","what":"Summarising study cohorts","title":"Summarise patient characteristics","text":"Now ’ve created cohorts, can obtain summary characteristics patients included cohorts. Now results, can create table overall summary people cohort.","code":"chars <- cdm$injuries |>   summariseCharacteristics(ageGroup = list(c(0, 49), c(50, Inf))) chars |>   glimpse() #> Rows: 192 #> Columns: 13 #> $ result_id        <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,… #> $ cdm_name         <chr> \"Eunomia\", \"Eunomia\", \"Eunomia\", \"Eunomia\", \"Eunomia\"… #> $ group_name       <chr> \"cohort_name\", \"cohort_name\", \"cohort_name\", \"cohort_… #> $ group_level      <chr> \"ankle_sprain\", \"ankle_sprain\", \"ankle_sprain\", \"ankl… #> $ strata_name      <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ strata_level     <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ variable_name    <chr> \"Number records\", \"Number subjects\", \"Cohort start da… #> $ variable_level   <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… #> $ estimate_name    <chr> \"count\", \"count\", \"min\", \"q25\", \"median\", \"q75\", \"max… #> $ estimate_type    <chr> \"integer\", \"integer\", \"date\", \"date\", \"date\", \"date\",… #> $ estimate_value   <chr> \"1915\", \"1357\", \"1912-02-25\", \"1968-06-15\", \"1982-11-… #> $ additional_name  <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ additional_level <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… tableCharacteristics(chars) chars |>   filter(variable_name == \"Age\") |>   plotCharacteristics(     plotType = \"boxplot\",     colour = \"cohort_name\",     facet = c(\"cdm_name\")   )"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/articles/summarise_characteristics.html","id":"stratified-summaries","dir":"Articles","previous_headings":"","what":"Stratified summaries","title":"Summarise patient characteristics","text":"can also generate summaries stratified variable interest. case add age group variable cohort table stratify results age group.","code":"chars <- cdm$injuries |>   addAge(ageGroup = list(     c(0, 49),     c(50, Inf)   )) |>   summariseCharacteristics(strata = list(\"age_group\")) tableCharacteristics(chars,   groupColumn = \"age_group\" ) chars |>   filter(variable_name == \"Prior observation\") |>   plotCharacteristics(     plotType = \"boxplot\",     colour = \"cohort_name\",     facet = c(\"age_group\")   ) +   coord_flip()"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/articles/summarise_characteristics.html","id":"summaries-including-presence-in-other-cohorts","dir":"Articles","previous_headings":"","what":"Summaries including presence in other cohorts","title":"Summarise patient characteristics","text":"results automatically included create table patient characteristics. can now also plot results medication cohorts interest.","code":"medsCs <- getDrugIngredientCodes(   cdm = cdm,   name = c(\"acetaminophen\", \"morphine\", \"warfarin\") ) cdm <- generateConceptCohortSet(   cdm = cdm,   name = \"meds\",   conceptSet = medsCs,   end = \"event_end_date\",   limit = \"all\",   overwrite = TRUE ) chars <- cdm$injuries |>   summariseCharacteristics(cohortIntersectFlag = list(     \"Medications prior to index date\" = list(       targetCohortTable = \"meds\",       window = c(-Inf, -1)     ),     \"Medications on index date\" = list(       targetCohortTable = \"meds\",       window = c(0, 0)     )   )) tableCharacteristics(chars) plot_data <- chars |>   filter(     variable_name == \"Medications prior to index date\",     estimate_name == \"percentage\"   )  plot_data |>   plotCharacteristics(     plotType = \"barplot\",     colour = \"variable_level\",     facet = c(\"cdm_name\", \"cohort_name\")   ) +   scale_x_discrete(limits = rev(sort(unique(plot_data$variable_level)))) +   coord_flip() +   ggtitle(\"Medication use prior to index date\")"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/articles/summarise_characteristics.html","id":"summaries-using-concept-sets","dir":"Articles","previous_headings":"","what":"Summaries using concept sets","title":"Summarise patient characteristics","text":"Instead creating cohorts, directly used concept sets medications characterising study cohorts. Although, like , concept sets can lead result using cohorts important note always case. creation cohorts involved collapsing overlapping records well imposing certain requirements, including records observed ongoing observation period. Meanwhile, working concept sets instead working directly record-level data.","code":"chars <- cdm$injuries |>   summariseCharacteristics(conceptIntersectFlag = list(     \"Medications prior to index date\" = list(       conceptSet = medsCs,       window = c(-Inf, -1)     ),     \"Medications on index date\" = list(       conceptSet = medsCs,       window = c(0, 0)     )   )) tableCharacteristics(chars)"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/articles/summarise_characteristics.html","id":"summaries-using-clinical-tables","dir":"Articles","previous_headings":"","what":"Summaries using clinical tables","title":"Summarise patient characteristics","text":"generally, can also include summaries patients’ presence clinical tables OMOP CDM. example, add count visit occurrences","code":"chars <- cdm$injuries |>   summariseCharacteristics(     tableIntersectCount = list(       \"Visits in the year prior\" = list(         tableName = \"visit_occurrence\",         window = c(-365, -1)       )     ),     tableIntersectFlag = list(       \"Any drug exposure in the year prior\" = list(         tableName = \"drug_exposure\",         window = c(-365, -1)       ),       \"Any procedure in the year prior\" = list(         tableName = \"procedure_occurrence\",         window = c(-365, -1)       )     )   ) tableCharacteristics(chars)"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/articles/summarise_characteristics.html","id":"summaries-including-additional-variables","dir":"Articles","previous_headings":"","what":"Summaries including additional variables","title":"Summarise patient characteristics","text":"ADD","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/articles/summarise_cohort_entries.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Summarise cohort entries","text":"example ’re going summarise characteristics individuals ankle sprain, ankle fracture, forearm fracture, hip fracture using Eunomia synthetic data. ’ll begin creating study cohorts.","code":"library(duckdb) library(CDMConnector) library(dplyr, warn.conflicts = FALSE) library(PatientProfiles) library(CohortCharacteristics)  con <- dbConnect(duckdb(), dbdir = eunomiaDir()) cdm <- cdmFromCon(   con = con, cdmSchem = \"main\", writeSchema = \"main\", cdmName = \"Eunomia\" )  cdm <- generateConceptCohortSet(   cdm = cdm,   name = \"injuries\",   conceptSet = list(     \"ankle_sprain\" = 81151,     \"ankle_fracture\" = 4059173,     \"forearm_fracture\" = 4278672,     \"hip_fracture\" = 4230399   ),   end = \"event_end_date\",   limit = \"all\" )"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/articles/summarise_cohort_entries.html","id":"summarising-cohort-counts","dir":"Articles","previous_headings":"","what":"Summarising cohort counts","title":"Summarise cohort entries","text":"can first quickly summarise present overall counts cohorts. Moreover, can also easily stratify counts. example, add age groups stratify counts t can summarise overall counts cohorts. can also apply minimum cell count suppression cohort counts. case obscure counts 10.","code":"cohortCounts <- summariseCohortCount(cdm$injuries) tableCohortCount(cohortCounts) cdm$injuries <- cdm$injuries |>   addAge(     ageGroup = list(c(0, 3), c(4, 17), c(18, Inf)),     name = \"injuries\"   )  cohortCounts <- summariseCohortCount(cdm[[\"injuries\"]], strata = \"age_group\") tableCohortCount(cohortCounts) cohortCounts <- cohortCounts |>   suppress(minCellCount = 10) tableCohortCount(cohortCounts)"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/articles/summarise_cohort_entries.html","id":"summarising-cohort-attrition","dir":"Articles","previous_headings":"","what":"Summarising cohort attrition","title":"Summarise cohort entries","text":"Say specify two inclusion criteria. First, keep cohort entries year 2000. Second, keep cohort entries aged 18 older. can easily create plots summarising cohort attrition. , course, applied requirements way around. well plotting cohort attrition, can also create table results.","code":"cdm <- generateConceptCohortSet(   cdm = cdm,   name = \"ankle_sprain\",   conceptSet = list(\"ankle_sprain\" = 81151),   end = \"event_end_date\",   limit = \"all\" )  cdm$ankle_sprain <- cdm$ankle_sprain |>   filter(year(cohort_start_date) >= 2000) |>   compute(temporary = FALSE, name = \"ankle_sprain\") |>   recordCohortAttrition(\"Restrict to cohort_start_date >= 2000\")  attritionSummary <- summariseCohortAttrition(cdm$ankle_sprain)  plotCohortAttrition(attritionSummary) cdm$ankle_sprain <- cdm$ankle_sprain |>   addAge() |>   filter(age >= 18) |>   compute(temporary = FALSE, name = \"ankle_sprain\") |>   recordCohortAttrition(\"Restrict to age >= 18\")  attritionSummary <- summariseCohortAttrition(cdm$ankle_sprain)  plotCohortAttrition(attritionSummary) cdm <- generateConceptCohortSet(   cdm = cdm,   name = \"ankle_sprain\",   conceptSet = list(\"ankle_sprain\" = 81151),   end = \"event_end_date\",   limit = \"all\" )  cdm$ankle_sprain <- cdm$ankle_sprain |>   addAge() |>   filter(age >= 18) |>   compute(temporary = FALSE, name = \"ankle_sprain\") |>   recordCohortAttrition(\"Restrict to age >= 18\")  cdm$ankle_sprain <- cdm$ankle_sprain |>   filter(year(cohort_start_date) >= 2000) |>   compute(temporary = FALSE, name = \"ankle_sprain\") |>   recordCohortAttrition(\"Restrict to cohort_start_date >= 2000\")  attritionSummary <- summariseCohortAttrition(cdm$ankle_sprain)  plotCohortAttrition(attritionSummary) tableCohortAttrition(attritionSummary)"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/articles/summarise_large_scale_characteristics.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Summarise large scale characteristics","text":"previous vignette seen can use CohortCharacteristics package summarise set pre-specified characteristics study cohort. characteristics included patient demographics like age sex, also concept sets cohorts defined. Another, often complimentary, way can approach characterising study cohort simply summarising clinical events see window around index date (cohort entry). show large scale characterisation can work ’ll first create first-ever ankle sprain study cohort using Eunomia synthetic data.","code":"library(duckdb) library(CDMConnector) library(dplyr, warn.conflicts = FALSE) library(PatientProfiles) library(CohortCharacteristics)  con <- dbConnect(duckdb(), dbdir = eunomiaDir()) cdm <- cdmFromCon(   con = con, cdmSchem = \"main\", writeSchema = \"main\", cdmName = \"Eunomia\" )  cdm <- generateConceptCohortSet(   cdm = cdm,   name = \"ankle_sprain\",   conceptSet = list(\"ankle_sprain\" = 81151),   end = \"event_end_date\",   limit = \"first\",   overwrite = TRUE )"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/articles/summarise_large_scale_characteristics.html","id":"large-scale-characteristics-of-study-cohorts","dir":"Articles","previous_headings":"","what":"Large scale characteristics of study cohorts","title":"Summarise large scale characteristics","text":"summarise cohort individuals ankle sprain look records three tables OMOP CDM (condition_occurrence, procedure_occurrence, drug_exposure) two time windows (time prior index date, index date). conditions procedures identify whether someone new record starting time window. Meanwhile, drug exposures consider whether new ongoing record period. Lastly, important note, going return results concepts least 10% study cohort record. can see identified numerous concepts least 10% study population record. Often larger cohorts real patient-level data obtain many times results running large scale characterisation. One option help summarise results pick frequent concepts. , example, select top 5 concepts.","code":"lsc <- cdm$ankle_sprain |>   summariseLargeScaleCharacteristics(     window = list(c(-Inf, -1), c(0, 0)),     eventInWindow = c(       \"condition_occurrence\",       \"procedure_occurrence\"     ),     episodeInWindow = \"drug_exposure\",     minimumFrequency = 0.1   )  tableLargeScaleCharacteristics(lsc) tableLargeScaleCharacteristics(lsc,   topConcepts = 5 )"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/articles/summarise_large_scale_characteristics.html","id":"stratified-large-scale-characteristics","dir":"Articles","previous_headings":"","what":"Stratified large scale characteristics","title":"Summarise large scale characteristics","text":"Like summarising pre-specified patient characteristics, can also get stratified results summarising large scale characteristics. , example, large scale characteristics stratified sex (add additional column cohort table using PatientProfiles package).","code":"lsc <- cdm$ankle_sprain |>   addSex() |>   summariseLargeScaleCharacteristics(     window = list(c(-Inf, -1), c(0, 0)),     strata = list(\"sex\"),     eventInWindow = \"drug_exposure\",     minimumFrequency = 0.1   )  tableLargeScaleCharacteristics(lsc)"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marti Catala. Author, maintainer. Yuchen Guo. Author. Mike Du. Contributor. Kim Lopez-Guell. Author. Edward Burn. Author. Nuria Mercade-Besora. Author. Marta Alcalde. Author.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Catala M, Guo Y, Lopez-Guell K, Burn E, Mercade-Besora N, Alcalde M (2024). CohortCharacteristics: Summarise Visualise Characteristics Patients OMOP CDM. R package version 0.4.0, https://darwin-eu.github.io/CohortCharacteristics/.","code":"@Manual{,   title = {CohortCharacteristics: Summarise and Visualise Characteristics of Patients in the OMOP CDM},   author = {Marti Catala and Yuchen Guo and Kim Lopez-Guell and Edward Burn and Nuria Mercade-Besora and Marta Alcalde},   year = {2024},   note = {R package version 0.4.0},   url = {https://darwin-eu.github.io/CohortCharacteristics/}, }"},{"path":[]},{"path":"https://darwin-eu.github.io/CohortCharacteristics/index.html","id":"package-overview","dir":"","previous_headings":"","what":"Package overview","title":"Summarise and Visualise Characteristics of Patients in the OMOP CDM","text":"CohortCharacteristics contains functions summarising characteristics cohorts patients identified OMOP CDM dataset. cohort table created, CohortCharacteristics provides number functions help provide summary characteristics individuals within cohort.","code":"#> To cite package 'CohortCharacteristics' in publications use: #>  #>   Catala M, Guo Y, Lopez-Guell K, Burn E, Mercade-Besora N, Alcalde M #>   (????). _CohortCharacteristics: Summarise and Visualise #>   Characteristics of Patients in the OMOP CDM_. R package version #>   0.4.0, <https://darwin-eu.github.io/CohortCharacteristics/>. #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {CohortCharacteristics: Summarise and Visualise Characteristics of Patients in the OMOP CDM}, #>     author = {Marti Catala and Yuchen Guo and Kim Lopez-Guell and Edward Burn and Nuria Mercade-Besora and Marta Alcalde}, #>     note = {R package version 0.4.0}, #>     url = {https://darwin-eu.github.io/CohortCharacteristics/}, #>   }"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/index.html","id":"package-installation","dir":"","previous_headings":"","what":"Package installation","title":"Summarise and Visualise Characteristics of Patients in the OMOP CDM","text":"can install latest version CohortCharacteristics CRAN: install development version github:","code":"install.packages(\"CohortCharacteristics\") install.packages(\"pak\") pak::pkg_install(\"darwin-eu/CohortCharacteristics\") library(CohortCharacteristics)"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/index.html","id":"content","dir":"","previous_headings":"","what":"Content","title":"Summarise and Visualise Characteristics of Patients in the OMOP CDM","text":"package contain three types functions: summarise* type functions. functions produce  standard output. See omopgenerics information standardised output format. functions ones work terms extracting necessary data cdm summarising . table* type functions. functions work output summarise ones. produce table visualisation created using visOmopResults package. plot* type functions. functions work output summarise ones. produce plot visualisation created using visOmopResults package.","code":""},{"path":[]},{"path":"https://darwin-eu.github.io/CohortCharacteristics/index.html","id":"mock-data","dir":"","previous_headings":"Examples","what":"Mock data","title":"Summarise and Visualise Characteristics of Patients in the OMOP CDM","text":"Although package provides simple mock data testing (mockCohortCharacteristics()), examples use GiBleed dataset can downloaded using CDMConnector package give us real results. Let’s create simple cohort:","code":"library(CDMConnector) library(duckdb) library(dplyr, warn.conflicts = FALSE) requireEunomia() con <- dbConnect(duckdb(), eunomiaDir()) cdm <- cdmFromCon(con = con, cdmSchema = \"main\", writeSchema = \"main\") library(DrugUtilisation) cdm <- generateIngredientCohortSet(cdm = cdm, name = \"my_cohort\", ingredient = c(\"warfarin\", \"acetaminophen\"))"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/index.html","id":"cohort-counts","dir":"","previous_headings":"Examples","what":"Cohort counts","title":"Summarise and Visualise Characteristics of Patients in the OMOP CDM","text":"can get counts using function summariseCohortCount(): can easily create table using associated table function, tableCohortCount():  create simple plot plotCohortCount():  function work using dynamic, first summarise, plot/table.","code":"result <- summariseCohortCount(cdm$my_cohort) result |>   glimpse() #> Rows: 4 #> Columns: 13 #> $ result_id        <int> 1, 1, 1, 1 #> $ cdm_name         <chr> \"Synthea synthetic health database\", \"Synthea synthet… #> $ group_name       <chr> \"cohort_name\", \"cohort_name\", \"cohort_name\", \"cohort_… #> $ group_level      <chr> \"11289_warfarin\", \"11289_warfarin\", \"161_acetaminophe… #> $ strata_name      <chr> \"overall\", \"overall\", \"overall\", \"overall\" #> $ strata_level     <chr> \"overall\", \"overall\", \"overall\", \"overall\" #> $ variable_name    <chr> \"Number records\", \"Number subjects\", \"Number records\"… #> $ variable_level   <chr> NA, NA, NA, NA #> $ estimate_name    <chr> \"count\", \"count\", \"count\", \"count\" #> $ estimate_type    <chr> \"integer\", \"integer\", \"integer\", \"integer\" #> $ estimate_value   <chr> \"137\", \"137\", \"13907\", \"2679\" #> $ additional_name  <chr> \"overall\", \"overall\", \"overall\", \"overall\" #> $ additional_level <chr> \"overall\", \"overall\", \"overall\", \"overall\" tableCohortCount(result, type = \"flextable\") result |>   filter(variable_name == \"Number subjects\") |>   plotCohortCount(x = \"cohort_name\", colour = \"cohort_name\")"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/index.html","id":"cohort-attrition","dir":"","previous_headings":"Examples","what":"Cohort attrition","title":"Summarise and Visualise Characteristics of Patients in the OMOP CDM","text":"","code":"result <- summariseCohortAttrition(cdm$my_cohort) tableCohortAttrition(result, type = \"flextable\") result |>   filter(group_level == \"161_acetaminophen\") |>   plotCohortAttrition()"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/index.html","id":"characteristics","dir":"","previous_headings":"Examples","what":"Characteristics","title":"Summarise and Visualise Characteristics of Patients in the OMOP CDM","text":"","code":"result <- summariseCharacteristics(cdm$my_cohort) tableCharacteristics(result, type = \"flextable\") result |>   filter(variable_name == \"Age\") |>   plotCharacteristics(plotType = \"boxplot\", colour = \"cohort_name\")"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/index.html","id":"timing-between-cohorts","dir":"","previous_headings":"Examples","what":"Timing between cohorts","title":"Summarise and Visualise Characteristics of Patients in the OMOP CDM","text":"","code":"result <- summariseCohortTiming(cdm$my_cohort) tableCohortTiming(result, type = \"flextable\") plotCohortTiming(   result,   uniqueCombinations = TRUE,   facet = \"cdm_name\",   colour = c(\"cohort_name_reference\", \"cohort_name_comparator\"),   timeScale = \"years\" ) plotCohortTiming(   result,   plotType = \"densityplot\",   uniqueCombinations = FALSE,   facet = \"cdm_name\",   colour = c(\"cohort_name_comparator\"),   timeScale = \"years\" )"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/index.html","id":"overlap-between-cohort","dir":"","previous_headings":"Examples","what":"Overlap between cohort","title":"Summarise and Visualise Characteristics of Patients in the OMOP CDM","text":"","code":"result <- summariseCohortOverlap(cdm$my_cohort) tableCohortOverlap(result, type = \"flextable\") plotCohortOverlap(result, uniqueCombinations = TRUE)"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/index.html","id":"large-scale-characteristics","dir":"","previous_headings":"Examples","what":"Large scale characteristics","title":"Summarise and Visualise Characteristics of Patients in the OMOP CDM","text":"","code":"result <- cdm$my_cohort |>   summariseLargeScaleCharacteristics(     window = list(c(-90, -1), c(0, 0), c(1, 90)),     eventInWindow = \"condition_occurrence\"   ) tableLargeScaleCharacteristics(result, type = \"flextable\") result |>   filter(group_level == \"161_acetaminophen\") |>   plotLargeScaleCharacteristics() result |>   filter(group_level == \"161_acetaminophen\", variable_level != \"0 to 0\") |>   plotComparedLargeScaleCharacteristics(     reference = c(variable_level = \"-90 to -1\"), colour = \"variable_name\"   )"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/index.html","id":"disconnect","dir":"","previous_headings":"Examples","what":"Disconnect","title":"Summarise and Visualise Characteristics of Patients in the OMOP CDM","text":"Disconnect database using CDMConnector::cdmDisconnect() close connection mockDisconnect() close connection delete created mock data:","code":"mockDisconnect(cdm)"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/index.html","id":"recommendations","dir":"","previous_headings":"Examples","what":"Recommendations","title":"Summarise and Visualise Characteristics of Patients in the OMOP CDM","text":"Although technically possible, recommend pipe table plot functions summarise ones. main reason summarise functions take time run, large scale characterisation big cdm object can take hours. pipe output table/plot function loose summarise result object. fact, times send code around ran others database want export summarised_result objects table plot like build compiling results different cdm objects. recommended: Recommended:","code":"cdm$my_cohort |>   summariseCharacteristics() |>   tableCharacteristics() x <- summariseCharacteristics(cdm$my_cohort)  tableCharacteristics(x)"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/CohortCharacteristics-package.html","id":null,"dir":"Reference","previous_headings":"","what":"CohortCharacteristics: Summarise and Visualise Characteristics of Patients in the OMOP CDM — CohortCharacteristics-package","title":"CohortCharacteristics: Summarise and Visualise Characteristics of Patients in the OMOP CDM — CohortCharacteristics-package","text":"Summarise visualise characteristics patients data mapped Observational Medical Outcomes Partnership (OMOP) common data model (CDM).","code":""},{"path":[]},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/CohortCharacteristics-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CohortCharacteristics: Summarise and Visualise Characteristics of Patients in the OMOP CDM — CohortCharacteristics-package","text":"Maintainer: Marti Catala marti.catalasabate@ndorms.ox.ac.uk (ORCID) Authors: Yuchen Guo yuchen.guo@ndorms.ox.ac.uk (ORCID) Kim Lopez-Guell kim.lopez@spc.ox.ac.uk (ORCID) Edward Burn edward.burn@ndorms.ox.ac.uk (ORCID) Nuria Mercade-Besora nuria.mercadebesora@ndorms.ox.ac.uk (ORCID) Marta Alcalde marta.alcaldeherraiz@ndorms.ox.ac.uk (ORCID) contributors: Mike Du mike.du@ndorms.ox.ac.uk (ORCID) [contributor]","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/availablePlotColumns.html","id":null,"dir":"Reference","previous_headings":"","what":"Available columns to use in facet and colour arguments in plot functions. — availablePlotColumns","title":"Available columns to use in facet and colour arguments in plot functions. — availablePlotColumns","text":"Available columns use facet colour arguments plot functions.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/availablePlotColumns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Available columns to use in facet and colour arguments in plot functions. — availablePlotColumns","text":"","code":"availablePlotColumns(result)"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/availablePlotColumns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Available columns to use in facet and colour arguments in plot functions. — availablePlotColumns","text":"result summarised_result object.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/availablePlotColumns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Available columns to use in facet and colour arguments in plot functions. — availablePlotColumns","text":"Character vector available columns.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/availablePlotColumns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Available columns to use in facet and colour arguments in plot functions. — availablePlotColumns","text":"","code":"{ cdm <- mockCohortCharacteristics()  result <- summariseCharacteristics(cdm$cohort1)  availablePlotColumns(result)  mockDisconnect(cdm) } #> Note: method with signature ‘DBIConnection#Id’ chosen for function ‘dbExistsTable’, #>  target signature ‘duckdb_connection#Id’. #>  \"duckdb_connection#ANY\" would also be valid #> ℹ adding demographics columns #> ℹ summarising data #> ✔ summariseCharacteristics finished!"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/availableTableColumns.html","id":null,"dir":"Reference","previous_headings":"","what":"Available columns to use in header, groupColumn and hide arguments in table functions. — availableTableColumns","title":"Available columns to use in header, groupColumn and hide arguments in table functions. — availableTableColumns","text":"Available columns use header, groupColumn hide arguments table functions.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/availableTableColumns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Available columns to use in header, groupColumn and hide arguments in table functions. — availableTableColumns","text":"","code":"availableTableColumns(result)"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/availableTableColumns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Available columns to use in header, groupColumn and hide arguments in table functions. — availableTableColumns","text":"result summarised_result object.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/availableTableColumns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Available columns to use in header, groupColumn and hide arguments in table functions. — availableTableColumns","text":"Character vector available columns.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/availableTableColumns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Available columns to use in header, groupColumn and hide arguments in table functions. — availableTableColumns","text":"","code":"{ cdm <- mockCohortCharacteristics()  result <- summariseCharacteristics(cdm$cohort1)  availableTableColumns(result)  mockDisconnect(cdm) } #> ℹ adding demographics columns #> ℹ summarising data #> ✔ summariseCharacteristics finished!"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/benchmarkCohortCharacteristics.html","id":null,"dir":"Reference","previous_headings":"","what":"Benchmark the main functions of CohortCharacteristics package. — benchmarkCohortCharacteristics","title":"Benchmark the main functions of CohortCharacteristics package. — benchmarkCohortCharacteristics","text":"Benchmark main functions CohortCharacteristics package.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/benchmarkCohortCharacteristics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Benchmark the main functions of CohortCharacteristics package. — benchmarkCohortCharacteristics","text":"","code":"benchmarkCohortCharacteristics(   cohort,   analysis = c(\"count\", \"attrition\", \"characteristics\", \"overlap\", \"timing\",     \"large scale characteristics\") )"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/benchmarkCohortCharacteristics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Benchmark the main functions of CohortCharacteristics package. — benchmarkCohortCharacteristics","text":"cohort cohort_table cdm_reference. analysis Set analysis perform, must subset : \"count\", \"attrition\", \"characteristics\", \"overlap\", \"timing\" \"large scale characteristics\".","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/benchmarkCohortCharacteristics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Benchmark the main functions of CohortCharacteristics package. — benchmarkCohortCharacteristics","text":"summarised_result object.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/benchmarkCohortCharacteristics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Benchmark the main functions of CohortCharacteristics package. — benchmarkCohortCharacteristics","text":"","code":"if (FALSE) { # \\dontrun{ CDMConnector::requireEunomia() con <- duckdb::dbConnect(duckdb::duckdb(), CDMConnector::eunomiaDir()) cdm <- CDMConnector::cdmFromCon(   con = con, cdmSchema = \"main\", writeSchema = \"main\" )  cdm <- CDMConnector::generateConceptCohortSet(   cdm = cdm,   conceptSet = list(sinusitis = 40481087, pharyngitis = 4112343),   name = \"my_cohort\" )  benchmarkCohortCharacteristics(cdm$my_cohort)  } # }"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/cohortDoc.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper for consistent documentation of cohort. — cohortDoc","title":"Helper for consistent documentation of cohort. — cohortDoc","text":"Helper consistent documentation cohort.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/cohortDoc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper for consistent documentation of cohort. — cohortDoc","text":"cohort cohort_table object.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/cohortIdDoc.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper for consistent documentation of cohortId. — cohortIdDoc","title":"Helper for consistent documentation of cohortId. — cohortIdDoc","text":"Helper consistent documentation cohortId.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/cohortIdDoc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper for consistent documentation of cohortId. — cohortIdDoc","text":"cohortId cohort definition id restrict . NULL, cohorts included.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/mockCohortCharacteristics.html","id":null,"dir":"Reference","previous_headings":"","what":"It creates a mock database for testing CohortCharacteristics package — mockCohortCharacteristics","title":"It creates a mock database for testing CohortCharacteristics package — mockCohortCharacteristics","text":"creates mock database testing CohortCharacteristics package","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/mockCohortCharacteristics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"It creates a mock database for testing CohortCharacteristics package — mockCohortCharacteristics","text":"","code":"mockCohortCharacteristics(   con = NULL,   writeSchema = NULL,   numberIndividuals = 10,   ...,   seed = NULL )"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/mockCohortCharacteristics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"It creates a mock database for testing CohortCharacteristics package — mockCohortCharacteristics","text":"con DBI connection create cdm mock object. writeSchema Name schema connection writing permissions. numberIndividuals Number individuals create cdm reference. ... User self defined tables put cdm, can input many user want. seed number set seed. NULL seed used.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/mockCohortCharacteristics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"It creates a mock database for testing CohortCharacteristics package — mockCohortCharacteristics","text":"mock cdm_reference object created following user's specifications.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/mockCohortCharacteristics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"It creates a mock database for testing CohortCharacteristics package — mockCohortCharacteristics","text":"","code":"# \\donttest{ library(CohortCharacteristics) library(CDMConnector)  cdm <- mockCohortCharacteristics()  mockDisconnect(cdm = cdm) # }"},{"path":[]},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/plotCharacteristics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot from the output of summariseCharacteristics. — plotCharacteristics","text":"","code":"plotCharacteristics(   result,   plotType = \"barplot\",   facet = NULL,   colour = NULL,   plotStyle = lifecycle::deprecated() )"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/plotCharacteristics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot from the output of summariseCharacteristics. — plotCharacteristics","text":"result summarised_result object. plotType Either barplot, scatterplot boxplot. barplot scatterplot subset just one estimate. facet Columns facet . See options availablePlotColumns(result). Formula also allowed specify rows columns. colour Columns color . See options availablePlotColumns(result). plotStyle deprecated.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/plotCharacteristics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a ggplot from the output of summariseCharacteristics. — plotCharacteristics","text":"ggplot.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/plotCharacteristics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a ggplot from the output of summariseCharacteristics. — plotCharacteristics","text":"","code":"# \\donttest{ library(CohortCharacteristics) library(dplyr, warn.conflicts = FALSE)  cdm <- mockCohortCharacteristics()  results <- summariseCharacteristics(   cohort = cdm$cohort1,   ageGroup = list(c(0, 19), c(20, 39), c(40, 59), c(60, 79), c(80, 150)),   tableIntersectCount = list(     tableName = \"visit_occurrence\", window = c(-365, -1)   ),   cohortIntersectFlag = list(     targetCohortTable = \"cohort2\", window = c(-365, -1)   ) ) #> ℹ adding demographics columns #> ℹ adding tableIntersectCount 1/1 #> ℹ adding cohortIntersectFlag 1/1 #> ℹ summarising data #> ✔ summariseCharacteristics finished!  results |>   filter(     variable_name == \"Cohort2 flag -365 to -1\", estimate_name == \"percentage\"   ) |>   plotCharacteristics(     plotType = \"barplot\",     colour = \"variable_level\",     facet = c(\"cdm_name\", \"cohort_name\")   )   results |>   filter(variable_name == \"Age\", estimate_name == \"mean\") |>   plotCharacteristics(     plotType = \"scatterplot\",     facet = \"cdm_name\"   )   results |>   filter(variable_name == \"Age\", group_level == \"cohort_1\") |>   plotCharacteristics(     plotType = \"boxplot\",     facet = \"cdm_name\",     colour = \"cohort_name\"   )   mockDisconnect(cdm) # }"},{"path":[]},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/plotCohortAttrition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create a ggplot from the output of summariseLargeScaleCharacteristics. — plotCohortAttrition","text":"","code":"plotCohortAttrition(   result,   show = c(\"subjects\", \"records\"),   cohortId = lifecycle::deprecated() )"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/plotCohortAttrition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create a ggplot from the output of summariseLargeScaleCharacteristics. — plotCohortAttrition","text":"result summarised_result object. show variables show attrition plot, can 'subjects', 'records' . cohortId deprecated.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/plotCohortAttrition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create a ggplot from the output of summariseLargeScaleCharacteristics. — plotCohortAttrition","text":"grViz visualisation.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/plotCohortAttrition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create a ggplot from the output of summariseLargeScaleCharacteristics. — plotCohortAttrition","text":"","code":"# \\donttest{ library(CohortCharacteristics) library(omopgenerics) #>  #> Attaching package: ‘omopgenerics’ #> The following objects are masked from ‘package:CDMConnector’: #>  #>     cdmName, recordCohortAttrition, uniqueTableName #> The following object is masked from ‘package:stats’: #>  #>     filter library(dplyr, warn.conflicts = FALSE)  cdm <- mockCohortCharacteristics(numberIndividuals = 1000)  cdm[[\"cohort1\"]] <- cdm[[\"cohort1\"]] |>   filter(year(cohort_start_date) >= 2000) |>   recordCohortAttrition(\"Restrict to cohort_start_date >= 2000\") |>   filter(year(cohort_end_date) < 2020) |>   recordCohortAttrition(\"Restrict to cohort_end_date < 2020\") |>   compute(temporary = FALSE, name = \"cohort1\")  result <- summariseCohortAttrition(cdm$cohort1)  result |>   filter(group_level == \"cohort_2\") |>   plotCohortAttrition()  {\"x\":{\"diagram\":\"digraph {\\n\\ngraph [layout = \\\"neato\\\",\\n       outputorder = \\\"edgesfirst\\\",\\n       bgcolor = \\\"white\\\"]\\n\\nnode [fontname = \\\"Helvetica\\\",\\n      fontsize = \\\"10\\\",\\n      shape = \\\"circle\\\",\\n      fixedsize = \\\"true\\\",\\n      width = \\\"0.5\\\",\\n      style = \\\"filled\\\",\\n      fillcolor = \\\"aliceblue\\\",\\n      color = \\\"gray70\\\",\\n      fontcolor = \\\"gray50\\\"]\\n\\nedge [fontname = \\\"Helvetica\\\",\\n     fontsize = \\\"8\\\",\\n     len = \\\"1.5\\\",\\n     color = \\\"gray80\\\",\\n     arrowsize = \\\"0.5\\\"]\\n\\n  \\\"1\\\" [label = \\\"Initial events\\nN subjects = 349\\nN records = 349\\\", shape = \\\"box\\\", penwidth = \\\"2\\\", color = \\\"black\\\", fillcolor = \\\"#F0F8FF\\\", fontname = \\\"Calibri\\\", fontsize = \\\"11\\\", fontcolor = \\\"black\\\", height = \\\"0.6\\\", width = \\\"1.28\\\", pos = \\\"1,3.1!\\\"] \\n  \\\"2\\\" [label = \\\"N subjects = 15\\nN records = 15\\\", shape = \\\"box\\\", penwidth = \\\"1\\\", color = \\\"black\\\", fillcolor = \\\"#F0F8FF\\\", fontname = \\\"Calibri\\\", fontsize = \\\"11\\\", fontcolor = \\\"black\\\", height = \\\"0.4\\\", width = \\\"1.28\\\", pos = \\\"1,2!\\\"] \\n  \\\"3\\\" [label = \\\"Final events\\nN subjects = 14\\nN records = 14\\\", shape = \\\"box\\\", penwidth = \\\"2\\\", color = \\\"black\\\", fillcolor = \\\"#F0F8FF\\\", fontname = \\\"Calibri\\\", fontsize = \\\"11\\\", fontcolor = \\\"black\\\", height = \\\"0.6\\\", width = \\\"1.28\\\", pos = \\\"1,0.9!\\\"] \\n  \\\"4\\\" [label = \\\"N subjects = 334\\nN records = 334\\\", shape = \\\"box\\\", color = \\\"black\\\", fillcolor = \\\"#C0C0C0\\\", fontname = \\\"Calibri\\\", fontsize = \\\"9\\\", fontcolor = \\\"black\\\", height = \\\"0.4\\\", width = \\\"1.2\\\", pos = \\\"3,2.5!\\\"] \\n  \\\"5\\\" [label = \\\"Restrict to cohort_start_date >= 2000\\\", shape = \\\"box\\\", color = \\\"black\\\", fillcolor = \\\"#FFFFFF\\\", fontname = \\\"Calibri\\\", fontsize = \\\"10\\\", fontcolor = \\\"back\\\", height = \\\"0.2\\\", width = \\\"2.25\\\", pos = \\\"1,2.5!\\\"] \\n  \\\"6\\\" [label = \\\"N subjects = 1\\nN records = 1\\\", shape = \\\"box\\\", color = \\\"black\\\", fillcolor = \\\"#C0C0C0\\\", fontname = \\\"Calibri\\\", fontsize = \\\"9\\\", fontcolor = \\\"black\\\", height = \\\"0.4\\\", width = \\\"1.2\\\", pos = \\\"3,1.5!\\\"] \\n  \\\"7\\\" [label = \\\"Restrict to cohort_end_date < 2020\\\", shape = \\\"box\\\", color = \\\"black\\\", fillcolor = \\\"#FFFFFF\\\", fontname = \\\"Calibri\\\", fontsize = \\\"10\\\", fontcolor = \\\"back\\\", height = \\\"0.2\\\", width = \\\"2.25\\\", pos = \\\"1,1.5!\\\"] \\n\\\"1\\\"->\\\"2\\\" [color = \\\"black\\\"] \\n\\\"2\\\"->\\\"3\\\" [color = \\\"black\\\"] \\n\\\"5\\\"->\\\"4\\\" [color = \\\"black\\\"] \\n\\\"7\\\"->\\\"6\\\" [color = \\\"black\\\"] \\n}\",\"config\":{\"engine\":\"dot\",\"options\":null}},\"evals\":[],\"jsHooks\":[]} mockDisconnect(cdm) # }"},{"path":[]},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/plotCohortCount.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the result of summariseCohortCount. — plotCohortCount","text":"","code":"plotCohortCount(result, x = NULL, facet = c(\"cdm_name\"), colour = NULL)"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/plotCohortCount.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the result of summariseCohortCount. — plotCohortCount","text":"result summarised_result object. x Variables use x axis. facet Columns facet . See options availablePlotColumns(result). Formula also allowed specify rows columns. colour Columns color . See options availablePlotColumns(result).","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/plotCohortCount.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the result of summariseCohortCount. — plotCohortCount","text":"ggplot.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/plotCohortCount.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the result of summariseCohortCount. — plotCohortCount","text":"","code":"# \\donttest{ library(CohortCharacteristics) library(PatientProfiles) library(dplyr, warn.conflicts = FALSE)  cdm <- mockCohortCharacteristics(numberIndividuals = 100)  counts <- cdm$cohort2 |>   addSex() |>   addAge(ageGroup = list(c(0, 29), c(30, 59), c(60, Inf))) |>   summariseCohortCount(strata = list(\"age_group\", \"sex\", c(\"age_group\", \"sex\"))) |>   filter(variable_name == \"Number subjects\") #> ℹ summarising data #> ✔ summariseCharacteristics finished!  counts |>   plotCohortCount(     x = \"sex\",     facet = cohort_name ~ age_group,     colour = \"sex\"   )   mockDisconnect(cdm) # }"},{"path":[]},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/plotCohortOverlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the result of summariseCohortOverlap. — plotCohortOverlap","text":"","code":"plotCohortOverlap(   result,   uniqueCombinations = TRUE,   y = NULL,   facet = c(\"cdm_name\", \"cohort_name_reference\"),   colour = \"variable_name\",   .options = lifecycle::deprecated() )"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/plotCohortOverlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the result of summariseCohortOverlap. — plotCohortOverlap","text":"result summarised_result object. uniqueCombinations Whether restrict unique reference comparator comparisons. y Variables use y axis, NULL variables present facet used. facet Columns facet . See options availablePlotColumns(result). Formula also allowed specify rows columns. colour Columns color . See options availablePlotColumns(result). .options deprecated.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/plotCohortOverlap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the result of summariseCohortOverlap. — plotCohortOverlap","text":"ggplot.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/plotCohortOverlap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the result of summariseCohortOverlap. — plotCohortOverlap","text":"","code":"# \\donttest{ library(CohortCharacteristics)  cdm <- mockCohortCharacteristics()  overlap <- summariseCohortOverlap(cdm$cohort2)  plotCohortOverlap(overlap, uniqueCombinations = FALSE)   mockDisconnect(cdm) # }"},{"path":[]},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/plotCohortTiming.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot summariseCohortTiming results. — plotCohortTiming","text":"","code":"plotCohortTiming(   result,   plotType = \"boxplot\",   timeScale = \"days\",   uniqueCombinations = TRUE,   facet = c(\"cdm_name\", \"cohort_name_reference\"),   colour = c(\"cohort_name_comparator\") )"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/plotCohortTiming.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot summariseCohortTiming results. — plotCohortTiming","text":"result summarised_result object. plotType Type desired formatted table, possibilities \"boxplot\" \"densityplot\". timeScale Time scale show, can \"days\" \"years\". uniqueCombinations Whether restrict unique reference comparator comparisons. facet Columns facet . See options availablePlotColumns(result). Formula also allowed specify rows columns. colour Columns color . See options availablePlotColumns(result).","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/plotCohortTiming.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot summariseCohortTiming results. — plotCohortTiming","text":"ggplot.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/plotCohortTiming.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot summariseCohortTiming results. — plotCohortTiming","text":"","code":"if (FALSE) { # \\dontrun{ library(CohortCharacteristics) library(duckdb) library(CDMConnector) library(DrugUtilisation)  con <- dbConnect(duckdb(), eunomiaDir()) cdm <- cdmFromCon(con, cdmSchem = \"main\", writeSchema = \"main\")  cdm <- generateIngredientCohortSet(   cdm = cdm,   name = \"my_cohort\",   ingredient = c(\"acetaminophen\", \"morphine\", \"warfarin\") )  timings <- summariseCohortTiming(cdm$my_cohort)  plotCohortTiming(   timings,   timeScale = \"years\",   uniqueCombinations = FALSE,   facet = c(\"cdm_name\", \"cohort_name_reference\"),   colour = c(\"cohort_name_comparator\") )  plotCohortTiming(   timings,   plotType = \"densityplot\",   timeScale = \"years\",   uniqueCombinations = FALSE,   facet = c(\"cdm_name\", \"cohort_name_reference\"),   colour = c(\"cohort_name_comparator\") )  cdmDisconnect(cdm) } # }"},{"path":[]},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/plotComparedLargeScaleCharacteristics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create a ggplot from the output of summariseLargeScaleCharacteristics. — plotComparedLargeScaleCharacteristics","text":"","code":"plotComparedLargeScaleCharacteristics(   result,   reference,   missings = 0,   facet = NULL,   colour = NULL )"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/plotComparedLargeScaleCharacteristics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create a ggplot from the output of summariseLargeScaleCharacteristics. — plotComparedLargeScaleCharacteristics","text":"result summarised_result object. reference named character set reference. missings Value replace missing value . NULL missing values eliminated. facet Columns facet . See options availablePlotColumns(result). Formula also allowed specify rows columns. colour Columns color . See options availablePlotColumns(result).","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/plotComparedLargeScaleCharacteristics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create a ggplot from the output of summariseLargeScaleCharacteristics. — plotComparedLargeScaleCharacteristics","text":"ggplot.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/plotComparedLargeScaleCharacteristics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create a ggplot from the output of summariseLargeScaleCharacteristics. — plotComparedLargeScaleCharacteristics","text":"","code":"if (FALSE) { # \\dontrun{ library(CohortCharacteristics) library(duckdb) library(CDMConnector) library(DrugUtilisation) library(plotly, warn.conflicts = FALSE)  con <- dbConnect(duckdb(), eunomiaDir()) cdm <- cdmFromCon(con, cdmSchem = \"main\", writeSchema = \"main\")  cdm <- generateIngredientCohortSet(   cdm = cdm, name = \"my_cohort\", ingredient = \"acetaminophen\" )  resultsLsc <- cdm$my_cohort |>   summariseLargeScaleCharacteristics(     window = list(c(-365, -1), c(1, 365)),     eventInWindow = \"condition_occurrence\"   )  resultsLsc |>   plotComparedLargeScaleCharacteristics(     reference = c(variable_level = \"-365 to -1\"),     colour = \"variable_name\",     missings = NULL   ) |>   ggplotly()  cdmDisconnect(cdm) } # }"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/plotDoc.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper for consistent documentation of plot. — plotDoc","title":"Helper for consistent documentation of plot. — plotDoc","text":"Helper consistent documentation plot.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/plotDoc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper for consistent documentation of plot. — plotDoc","text":"facet Columns facet . See options availablePlotColumns(result). Formula also allowed specify rows columns. colour Columns color . See options availablePlotColumns(result).","code":""},{"path":[]},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/plotLargeScaleCharacteristics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create a ggplot from the output of summariseLargeScaleCharacteristics. — plotLargeScaleCharacteristics","text":"","code":"plotLargeScaleCharacteristics(   result,   facet = c(\"cdm_name\", \"cohort_name\"),   colour = \"variable_level\" )"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/plotLargeScaleCharacteristics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create a ggplot from the output of summariseLargeScaleCharacteristics. — plotLargeScaleCharacteristics","text":"result summarised_result object. facet Columns facet . See options availablePlotColumns(result). Formula also allowed specify rows columns. colour Columns color . See options availablePlotColumns(result).","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/plotLargeScaleCharacteristics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create a ggplot from the output of summariseLargeScaleCharacteristics. — plotLargeScaleCharacteristics","text":"ggplot2 object.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/plotLargeScaleCharacteristics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create a ggplot from the output of summariseLargeScaleCharacteristics. — plotLargeScaleCharacteristics","text":"","code":"if (FALSE) { # \\dontrun{ library(CohortCharacteristics) library(duckdb) library(CDMConnector) library(DrugUtilisation)  con <- dbConnect(duckdb(), eunomiaDir()) cdm <- cdmFromCon(con, cdmSchem = \"main\", writeSchema = \"main\")  cdm <- generateIngredientCohortSet(   cdm = cdm, name = \"my_cohort\", ingredient = \"acetaminophen\" )  resultsLsc <- cdm$my_cohort |>   summariseLargeScaleCharacteristics(     window = list(c(-365, -1), c(1, 365)),     eventInWindow = \"condition_occurrence\"   )  resultsLsc |>   plotLargeScaleCharacteristics(     facet = c(\"cdm_name\", \"cohort_name\"),     colour = \"variable_level\"   )  cdmDisconnect(cdm) } # }"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. omopgenerics additionalColumns, bind, exportSummarisedResult, groupColumns, importSummarisedResult, settings, settingsColumns, strataColumns, suppress, tidy PatientProfiles mockDisconnect","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/resultDoc.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper for consistent documentation of result. — resultDoc","title":"Helper for consistent documentation of result. — resultDoc","text":"Helper consistent documentation result.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/resultDoc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper for consistent documentation of result. — resultDoc","text":"result summarised_result object.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/strataDoc.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper for consistent documentation of strata. — strataDoc","title":"Helper for consistent documentation of strata. — strataDoc","text":"Helper consistent documentation strata.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/strataDoc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper for consistent documentation of strata. — strataDoc","text":"strata list variables stratify results. variables must added additional columns cohort table.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/summariseCharacteristics.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise characteristics of cohorts in a cohort table — summariseCharacteristics","title":"Summarise characteristics of cohorts in a cohort table — summariseCharacteristics","text":"Summarise characteristics cohorts cohort table","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/summariseCharacteristics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise characteristics of cohorts in a cohort table — summariseCharacteristics","text":"","code":"summariseCharacteristics(   cohort,   cohortId = NULL,   strata = list(),   counts = TRUE,   demographics = TRUE,   ageGroup = NULL,   tableIntersectFlag = list(),   tableIntersectCount = list(),   tableIntersectDate = list(),   tableIntersectDays = list(),   cohortIntersectFlag = list(),   cohortIntersectCount = list(),   cohortIntersectDate = list(),   cohortIntersectDays = list(),   conceptIntersectFlag = list(),   conceptIntersectCount = list(),   conceptIntersectDate = list(),   conceptIntersectDays = list(),   otherVariables = character(),   estimates = list(),   otherVariablesEstimates = lifecycle::deprecated() )"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/summariseCharacteristics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise characteristics of cohorts in a cohort table — summariseCharacteristics","text":"cohort cohort_table object. cohortId cohort definition id restrict . NULL, cohorts included. strata list variables stratify results. variables must added additional columns cohort table. counts TRUE FALSE. TRUE, record person counts produced. demographics TRUE FALSE. TRUE, patient demographics (cohort start date, cohort end date, age, sex, prior observation, future observation summarised). ageGroup list age groups stratify results . tableIntersectFlag list arguments uses PatientProfiles::addTableIntersectFlag() add variables summarise. tableIntersectCount list arguments uses PatientProfiles::addTableIntersectCount() add variables summarise. tableIntersectDate list arguments uses PatientProfiles::addTableIntersectDate() add variables summarise. tableIntersectDays list arguments uses PatientProfiles::addTableIntersectDays() add variables summarise. cohortIntersectFlag list arguments uses PatientProfiles::addCohortIntersectFlag() add variables summarise. cohortIntersectCount list arguments uses PatientProfiles::addCohortIntersectCount() add variables summarise. cohortIntersectDate list arguments uses PatientProfiles::addCohortIntersectDate() add variables summarise. cohortIntersectDays list arguments uses PatientProfiles::addCohortIntersectDays() add variables summarise. conceptIntersectFlag list arguments uses PatientProfiles::addConceptIntersectFlag() add variables summarise. conceptIntersectCount list arguments uses PatientProfiles::addConceptIntersectCount() add variables summarise. conceptIntersectDate list arguments uses PatientProfiles::addConceptIntersectDate() add variables summarise. conceptIntersectDays list arguments uses PatientProfiles::addConceptIntersectDays() add variables summarise. otherVariables variables contained cohort want summarised. estimates modify default estimates variable. default: 'min', 'q25', 'median', 'q75', 'max' \"date\", \"numeric\" \"integer\" variables (\"numeric\" \"integer\" also use 'mean' 'sd' estimates). 'count' 'percentage' \"categorical\" \"binary\". provide list: list(age = c(\"median\", \"density\")). can also use 'date', 'numeric', 'binary' 'categorical' keywords. otherVariablesEstimates deprecated.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/summariseCharacteristics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise characteristics of cohorts in a cohort table — summariseCharacteristics","text":"summary characteristics cohorts cohort table.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/summariseCharacteristics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise characteristics of cohorts in a cohort table — summariseCharacteristics","text":"","code":"# \\donttest{ library(dplyr, warn.conflicts = FALSE) library(CohortCharacteristics) library(PatientProfiles)  cdm <- mockCohortCharacteristics()  cdm$cohort1 |>   addSex() |>   addAge(     ageGroup = list(c(0, 40), c(41, 150))   ) |>   summariseCharacteristics(     strata = list(\"sex\", \"age_group\"),     cohortIntersectFlag = list(       \"Cohort 2 Flag\" = list(         targetCohortTable = \"cohort2\", window = c(-365, 0)       )     ),     cohortIntersectCount = list(       \"Cohort 2 Count\" = list(         targetCohortTable = \"cohort2\", window = c(-365, 0)       )     )   ) |>   glimpse() #> ℹ adding demographics columns #> ℹ adding cohortIntersectFlag 1/1 #> ℹ adding cohortIntersectCount 1/1 #> ℹ summarising data #> ✔ summariseCharacteristics finished! #> Rows: 840 #> Columns: 13 #> $ result_id        <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,… #> $ cdm_name         <chr> \"PP_MOCK\", \"PP_MOCK\", \"PP_MOCK\", \"PP_MOCK\", \"PP_MOCK\"… #> $ group_name       <chr> \"cohort_name\", \"cohort_name\", \"cohort_name\", \"cohort_… #> $ group_level      <chr> \"cohort_1\", \"cohort_1\", \"cohort_1\", \"cohort_1\", \"coho… #> $ strata_name      <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ strata_level     <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ variable_name    <chr> \"Number records\", \"Number subjects\", \"Cohort start da… #> $ variable_level   <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… #> $ estimate_name    <chr> \"count\", \"count\", \"min\", \"q25\", \"median\", \"q75\", \"max… #> $ estimate_type    <chr> \"integer\", \"integer\", \"date\", \"date\", \"date\", \"date\",… #> $ estimate_value   <chr> \"2\", \"2\", \"1927-02-20\", \"1938-01-06\", \"1948-11-22\", \"… #> $ additional_name  <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ additional_level <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"…  mockDisconnect(cdm) # }"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/summariseCohortAttrition.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise attrition associated with cohorts in a cohort table — summariseCohortAttrition","title":"Summarise attrition associated with cohorts in a cohort table — summariseCohortAttrition","text":"Summarise attrition associated cohorts cohort table","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/summariseCohortAttrition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise attrition associated with cohorts in a cohort table — summariseCohortAttrition","text":"","code":"summariseCohortAttrition(cohort, cohortId = NULL)"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/summariseCohortAttrition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise attrition associated with cohorts in a cohort table — summariseCohortAttrition","text":"cohort cohort_table object. cohortId cohort definition id restrict . NULL, cohorts included.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/summariseCohortAttrition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise attrition associated with cohorts in a cohort table — summariseCohortAttrition","text":"summary attrition cohorts cohort table.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/summariseCohortAttrition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise attrition associated with cohorts in a cohort table — summariseCohortAttrition","text":"","code":"# \\donttest{ library(CohortCharacteristics) library(dplyr, warn.conflicts = FALSE)  cdm <- mockCohortCharacteristics()  summariseCohortAttrition(cohort = cdm$cohort1) |>   glimpse() #> Rows: 12 #> Columns: 13 #> $ result_id        <int> 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3 #> $ cdm_name         <chr> \"PP_MOCK\", \"PP_MOCK\", \"PP_MOCK\", \"PP_MOCK\", \"PP_MOCK\"… #> $ group_name       <chr> \"cohort_name\", \"cohort_name\", \"cohort_name\", \"cohort_… #> $ group_level      <chr> \"cohort_1\", \"cohort_1\", \"cohort_1\", \"cohort_1\", \"coho… #> $ strata_name      <chr> \"reason\", \"reason\", \"reason\", \"reason\", \"reason\", \"re… #> $ strata_level     <chr> \"Initial qualifying events\", \"Initial qualifying even… #> $ variable_name    <chr> \"number_records\", \"number_subjects\", \"excluded_record… #> $ variable_level   <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA #> $ estimate_name    <chr> \"count\", \"count\", \"count\", \"count\", \"count\", \"count\",… #> $ estimate_type    <chr> \"integer\", \"integer\", \"integer\", \"integer\", \"integer\"… #> $ estimate_value   <chr> \"2\", \"2\", \"0\", \"0\", \"4\", \"4\", \"0\", \"0\", \"4\", \"4\", \"0\"… #> $ additional_name  <chr> \"reason_id\", \"reason_id\", \"reason_id\", \"reason_id\", \"… #> $ additional_level <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\"…  mockDisconnect(cdm) # }"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/summariseCohortCount.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise counts for cohorts in a cohort table — summariseCohortCount","title":"Summarise counts for cohorts in a cohort table — summariseCohortCount","text":"Summarise counts cohorts cohort table","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/summariseCohortCount.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise counts for cohorts in a cohort table — summariseCohortCount","text":"","code":"summariseCohortCount(cohort, cohortId = NULL, strata = list())"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/summariseCohortCount.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise counts for cohorts in a cohort table — summariseCohortCount","text":"cohort cohort_table object. cohortId cohort definition id restrict . NULL, cohorts included. strata list variables stratify results. variables must added additional columns cohort table.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/summariseCohortCount.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise counts for cohorts in a cohort table — summariseCohortCount","text":"summary counts cohorts cohort table.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/summariseCohortCount.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise counts for cohorts in a cohort table — summariseCohortCount","text":"","code":"# \\donttest{ library(CohortCharacteristics) library(dplyr, warn.conflicts = FALSE)  cdm <- mockCohortCharacteristics()  summariseCohortCount(cohort = cdm$cohort1) |>   glimpse() #> ℹ summarising data #> ✔ summariseCharacteristics finished! #> Rows: 4 #> Columns: 13 #> $ result_id        <int> 1, 1, 1, 1 #> $ cdm_name         <chr> \"PP_MOCK\", \"PP_MOCK\", \"PP_MOCK\", \"PP_MOCK\" #> $ group_name       <chr> \"cohort_name\", \"cohort_name\", \"cohort_name\", \"cohort_… #> $ group_level      <chr> \"cohort_1\", \"cohort_1\", \"cohort_3\", \"cohort_3\" #> $ strata_name      <chr> \"overall\", \"overall\", \"overall\", \"overall\" #> $ strata_level     <chr> \"overall\", \"overall\", \"overall\", \"overall\" #> $ variable_name    <chr> \"Number records\", \"Number subjects\", \"Number records\"… #> $ variable_level   <chr> NA, NA, NA, NA #> $ estimate_name    <chr> \"count\", \"count\", \"count\", \"count\" #> $ estimate_type    <chr> \"integer\", \"integer\", \"integer\", \"integer\" #> $ estimate_value   <chr> \"3\", \"3\", \"7\", \"7\" #> $ additional_name  <chr> \"overall\", \"overall\", \"overall\", \"overall\" #> $ additional_level <chr> \"overall\", \"overall\", \"overall\", \"overall\"  mockDisconnect(cdm) # }"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/summariseCohortOverlap.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise overlap between cohorts in a cohort table — summariseCohortOverlap","title":"Summarise overlap between cohorts in a cohort table — summariseCohortOverlap","text":"Summarise overlap cohorts cohort table","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/summariseCohortOverlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise overlap between cohorts in a cohort table — summariseCohortOverlap","text":"","code":"summariseCohortOverlap(   cohort,   cohortId = NULL,   strata = list(),   overlapBy = \"subject_id\" )"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/summariseCohortOverlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise overlap between cohorts in a cohort table — summariseCohortOverlap","text":"cohort cohort_table object. cohortId cohort definition id restrict . NULL, cohorts included. strata list variables stratify results. variables must added additional columns cohort table. overlapBy Columns cohort use record identifiers.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/summariseCohortOverlap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise overlap between cohorts in a cohort table — summariseCohortOverlap","text":"summary overlap cohorts cohort table.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/summariseCohortOverlap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise overlap between cohorts in a cohort table — summariseCohortOverlap","text":"","code":"# \\donttest{ library(CohortCharacteristics) library(dplyr, warn.conflicts = FALSE)  cdm <- mockCohortCharacteristics()  summariseCohortOverlap(cdm$cohort2) |>   glimpse() #> Rows: 36 #> Columns: 13 #> $ result_id        <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,… #> $ cdm_name         <chr> \"PP_MOCK\", \"PP_MOCK\", \"PP_MOCK\", \"PP_MOCK\", \"PP_MOCK\"… #> $ group_name       <chr> \"cohort_name_reference &&& cohort_name_comparator\", \"… #> $ group_level      <chr> \"cohort_1 &&& cohort_2\", \"cohort_1 &&& cohort_2\", \"co… #> $ strata_name      <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ strata_level     <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ variable_name    <chr> \"Only in reference cohort\", \"In both cohorts\", \"Only … #> $ variable_level   <chr> \"Subjects\", \"Subjects\", \"Subjects\", \"Subjects\", \"Subj… #> $ estimate_name    <chr> \"count\", \"count\", \"count\", \"count\", \"count\", \"count\",… #> $ estimate_type    <chr> \"integer\", \"integer\", \"integer\", \"integer\", \"integer\"… #> $ estimate_value   <chr> \"6\", \"0\", \"1\", \"6\", \"0\", \"3\", \"1\", \"0\", \"6\", \"1\", \"0\"… #> $ additional_name  <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ additional_level <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"…  mockDisconnect(cdm) # }"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/summariseCohortTiming.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise timing between entries into cohorts in a cohort table — summariseCohortTiming","title":"Summarise timing between entries into cohorts in a cohort table — summariseCohortTiming","text":"Summarise timing entries cohorts cohort table","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/summariseCohortTiming.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise timing between entries into cohorts in a cohort table — summariseCohortTiming","text":"","code":"summariseCohortTiming(   cohort,   cohortId = NULL,   strata = list(),   restrictToFirstEntry = TRUE,   estimates = c(\"min\", \"q25\", \"median\", \"q75\", \"max\", \"density\"),   density = lifecycle::deprecated() )"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/summariseCohortTiming.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise timing between entries into cohorts in a cohort table — summariseCohortTiming","text":"cohort cohort_table object. cohortId cohort definition id restrict . NULL, cohorts included. strata list variables stratify results. variables must added additional columns cohort table. restrictToFirstEntry TRUE individual's first entry per cohort considered. FALSE entries per individual considered. estimates Summary statistics use summarising timing. density deprecated.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/summariseCohortTiming.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise timing between entries into cohorts in a cohort table — summariseCohortTiming","text":"summary timing entries cohorts cohort table.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/summariseCohortTiming.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise timing between entries into cohorts in a cohort table — summariseCohortTiming","text":"","code":"# \\donttest{ library(CohortCharacteristics) library(dplyr, warn.conflicts = FALSE)  cdm <- mockCohortCharacteristics(numberIndividuals = 100)  summariseCohortTiming(cdm$cohort2) |>   glimpse() #> Rows: 0 #> Columns: 13 #> $ result_id        <int>  #> $ cdm_name         <chr>  #> $ group_name       <chr>  #> $ group_level      <chr>  #> $ strata_name      <chr>  #> $ strata_level     <chr>  #> $ variable_name    <chr>  #> $ variable_level   <chr>  #> $ estimate_name    <chr>  #> $ estimate_type    <chr>  #> $ estimate_value   <chr>  #> $ additional_name  <chr>  #> $ additional_level <chr>   mockDisconnect(cdm) # }"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/summariseLargeScaleCharacteristics.html","id":null,"dir":"Reference","previous_headings":"","what":"This function is used to summarise the large scale characteristics of a cohort table — summariseLargeScaleCharacteristics","title":"This function is used to summarise the large scale characteristics of a cohort table — summariseLargeScaleCharacteristics","text":"function used summarise large scale characteristics cohort table","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/summariseLargeScaleCharacteristics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function is used to summarise the large scale characteristics of a cohort table — summariseLargeScaleCharacteristics","text":"","code":"summariseLargeScaleCharacteristics(   cohort,   cohortId = NULL,   strata = list(),   window = list(c(-Inf, -366), c(-365, -31), c(-30, -1), c(0, 0), c(1, 30), c(31, 365),     c(366, Inf)),   eventInWindow = NULL,   episodeInWindow = NULL,   indexDate = \"cohort_start_date\",   censorDate = NULL,   includeSource = FALSE,   minimumFrequency = 0.005,   excludedCodes = c(0) )"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/summariseLargeScaleCharacteristics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function is used to summarise the large scale characteristics of a cohort table — summariseLargeScaleCharacteristics","text":"cohort cohort_table object. cohortId cohort definition id restrict . NULL, cohorts included. strata list variables stratify results. variables must added additional columns cohort table. window Temporal windows want characterize. eventInWindow Tables characterise events window. eventInWindow must provided episodeInWindow specified. episodeInWindow Tables characterise episodes window. episodeInWindow must provided eventInWindow specified. indexDate Variable x contains date compute intersection. censorDate whether censor overlap events specific date column date x includeSource Whether include source concepts. minimumFrequency Minimum frequency codes reported. concept_id frequency smaller minimumFrequency certain window estimate eliminated result object. excludedCodes Codes excluded.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/summariseLargeScaleCharacteristics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function is used to summarise the large scale characteristics of a cohort table — summariseLargeScaleCharacteristics","text":"output function ResultSummary containing relevant information.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/summariseLargeScaleCharacteristics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function is used to summarise the large scale characteristics of a cohort table — summariseLargeScaleCharacteristics","text":"","code":"if (FALSE) { # \\dontrun{ library(CohortCharacteristics) library(duckdb) library(CDMConnector) library(DrugUtilisation) library(dplyr, warn.conflicts = FALSE)  con <- dbConnect(duckdb(), eunomiaDir()) cdm <- cdmFromCon(con, cdmSchem = \"main\", writeSchema = \"main\")  cdm <- generateIngredientCohortSet(   cdm = cdm, name = \"my_cohort\", ingredient = \"acetaminophen\" )  cdm$my_cohort |>   summariseLargeScaleCharacteristics(     window = list(c(-365, -1), c(1, 365)),     eventInWindow = \"condition_occurrence\"   ) |>   glimpse()  cdmDisconnect(cdm) } # }"},{"path":[]},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/tableCharacteristics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a summarise_characteristics object into a visual table. — tableCharacteristics","text":"","code":"tableCharacteristics(   result,   type = \"gt\",   header = c(\"cdm_name\", \"cohort_name\"),   groupColumn = character(),   hide = c(additionalColumns(result), settingsColumns(result)) )"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/tableCharacteristics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a summarise_characteristics object into a visual table. — tableCharacteristics","text":"result summarised_result object. type Type table. Check supported types visOmopResults::tableType(). header Columns use header. See options availableTableColumns(result). groupColumn Columns group . See options availableTableColumns(result). hide Columns hide visualisation. See options availableTableColumns(result).","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/tableCharacteristics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a summarise_characteristics object into a visual table. — tableCharacteristics","text":"formatted table.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/tableCharacteristics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format a summarise_characteristics object into a visual table. — tableCharacteristics","text":"","code":"# \\donttest{ library(CohortCharacteristics)  cdm <- mockCohortCharacteristics()  result <- summariseCharacteristics(cdm$cohort1) #> ℹ adding demographics columns #> ℹ summarising data #> ✔ summariseCharacteristics finished!  tableCharacteristics(result)                     CDM name                            PP_MOCK            Variable name       Variable level       Estimate name                Cohort name            cohort_1       cohort_2       cohort_3     Number records - N 4 2 4Number subjects - N 4 2 4Cohort start date - Median [Q25 - Q75] 1937-07-15 [1933-05-09 - 1951-06-20] 1948-01-23 [1943-06-02 - 1952-09-15] 1940-06-07 [1924-11-05 - 1952-01-04]  Range 1924-02-09 to 1989-12-13 1938-10-10 to 1957-05-08 1909-11-14 to 1954-12-17Cohort end date - Median [Q25 - Q75] 1943-05-21 [1938-12-09 - 1955-12-02] 1954-10-03 [1947-05-02 - 1962-03-06] 1947-05-10 [1934-01-11 - 1954-04-21]  Range 1927-10-12 to 1991-05-08 1939-11-30 to 1969-08-06 1910-07-18 to 1958-09-02Age - Median [Q25 - Q75] 14 [14 - 15] 26 [25 - 26] 2 [2 - 10]  Mean (SD) 14.75 (2.99) 25.50 (2.12) 9.75 (15.52)  Range 12 to 19 24 to 27 1 to 33Sex Female N (%) 2 (50.00%) 1 (50.00%) - Male N (%) 2 (50.00%) 1 (50.00%) 4 (100.00%)Prior observation - Median [Q25 - Q75] 5,366 [5,060 - 5,888] 9,518 [9,206 - 9,831] 1,224 [956 - 4,075]  Mean (SD) 5,581.50 (1,152.49) 9,518.50 (884.59) 3,806.50 (5,511.05)  Range 4,422 to 7,172 8,893 to 10,144 715 to 12,062Future observation - Median [Q25 - Q75] 7,123 [3,919 - 9,623] 7,077 [6,870 - 7,284] 5,942 [2,063 - 9,795]  Mean (SD) 6,419.00 (4,094.94) 7,077.00 (586.90) 5,915.75 (4,796.67)  Range 1,407 to 10,023 6,662 to 7,492 1,255 to 10,524Days in cohort - Median [Q25 - Q75] 1,671 [1,134 - 2,068] 2,446 [1,431 - 3,460] 1,012 [562 - 2,115]  Mean (SD) 1,531.75 (784.14) 2,445.50 (2,868.73) 1,665.25 (1,873.79)  Range 512 to 2,273 417 to 4,474 247 to 4,391 mockDisconnect(cdm) # }"},{"path":[]},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/tableCohortAttrition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a visual table from the output of summariseCohortAttrition. — tableCohortAttrition","text":"","code":"tableCohortAttrition(   result,   type = \"gt\",   header = \"variable_name\",   groupColumn = c(\"cdm_name\", \"cohort_name\"),   hide = c(\"variable_level\", \"reason_id\", \"estimate_name\", settingsColumns(result)) )"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/tableCohortAttrition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a visual table from the output of summariseCohortAttrition. — tableCohortAttrition","text":"result summarised_result object. type Type table. Check supported types visOmopResults::tableType(). header Columns use header. See options availableTableColumns(result). groupColumn Columns group . See options availableTableColumns(result). hide Columns hide visualisation. See options availableTableColumns(result).","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/tableCohortAttrition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a visual table from the output of summariseCohortAttrition. — tableCohortAttrition","text":"formatted table.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/tableCohortAttrition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a visual table from the output of summariseCohortAttrition. — tableCohortAttrition","text":"","code":"# \\donttest{ library(CohortCharacteristics)  cdm <- mockCohortCharacteristics()  result <- summariseCohortAttrition(cdm$cohort2)  tableCohortAttrition(result)     Reason                Variable name            number_records       number_subjects       excluded_records       excluded_subjects     PP_MOCK; cohort_1     Initial qualifying events 3 3 0 0PP_MOCK; cohort_2     Initial qualifying events 3 3 0 0PP_MOCK; cohort_3     Initial qualifying events 4 4 0 0 mockDisconnect(cdm) # }"},{"path":[]},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/tableCohortCount.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a summarise_characteristics object into a visual table. — tableCohortCount","text":"","code":"tableCohortCount(   result,   type = \"gt\",   header = \"cohort_name\",   groupColumn = character(),   hide = c(\"variable_level\", settingsColumns(result)) )"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/tableCohortCount.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a summarise_characteristics object into a visual table. — tableCohortCount","text":"result summarised_result object. type Type table. Check supported types visOmopResults::tableType(). header Columns use header. See options availableTableColumns(result). groupColumn Columns group . See options availableTableColumns(result). hide Columns hide visualisation. See options availableTableColumns(result).","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/tableCohortCount.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a summarise_characteristics object into a visual table. — tableCohortCount","text":"formatted table.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/tableCohortCount.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format a summarise_characteristics object into a visual table. — tableCohortCount","text":"","code":"# \\donttest{ library(CohortCharacteristics)  cdm <- mockCohortCharacteristics()  result <- summariseCohortCount(cdm$cohort1) #> ℹ summarising data #> ✔ summariseCharacteristics finished!  tableCohortCount(result)     CDM name       Variable name       Estimate name                Cohort name            cohort_1       cohort_2       cohort_3     PP_MOCK Number records N 3 1 6 Number subjects N 3 1 6 mockDisconnect(cdm = cdm) # }"},{"path":[]},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/tableCohortOverlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a summariseOverlapCohort result into a visual table. — tableCohortOverlap","text":"","code":"tableCohortOverlap(   result,   uniqueCombinations = TRUE,   type = \"gt\",   header = c(\"variable_name\"),   groupColumn = c(\"cdm_name\"),   hide = c(\"variable_level\", settingsColumns(result)) )"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/tableCohortOverlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a summariseOverlapCohort result into a visual table. — tableCohortOverlap","text":"result summarised_result object. uniqueCombinations Whether restrict unique reference comparator comparisons. type Type table. Check supported types visOmopResults::tableType(). header Columns use header. See options availableTableColumns(result). groupColumn Columns group . See options availableTableColumns(result). hide Columns hide visualisation. See options availableTableColumns(result).","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/tableCohortOverlap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a summariseOverlapCohort result into a visual table. — tableCohortOverlap","text":"formatted table.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/tableCohortOverlap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format a summariseOverlapCohort result into a visual table. — tableCohortOverlap","text":"","code":"# \\donttest{ library(CohortCharacteristics)  cdm <- mockCohortCharacteristics()  overlap <- summariseCohortOverlap(cdm$cohort2)  tableCohortOverlap(overlap)     Cohort name reference       Cohort name comparator       Estimate name                Variable name            Only in reference cohort       In both cohorts       Only in comparator cohort     PP_MOCK     cohort_1 cohort_2 N (%) 6 (85.71%) 0 (0.00%) 1 (14.29%) cohort_3 N (%) 6 (66.67%) 0 (0.00%) 3 (33.33%)cohort_2 cohort_3 N (%) 1 (25.00%) 0 (0.00%) 3 (75.00%) mockDisconnect(cdm = cdm) # }"},{"path":[]},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/tableCohortTiming.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a summariseCohortTiming result into a visual table. — tableCohortTiming","text":"","code":"tableCohortTiming(   result,   timeScale = \"days\",   uniqueCombinations = TRUE,   type = \"gt\",   header = strataColumns(result),   groupColumn = c(\"cdm_name\"),   hide = c(\"variable_level\", settingsColumns(result)) )"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/tableCohortTiming.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a summariseCohortTiming result into a visual table. — tableCohortTiming","text":"result summarised_result object. timeScale Time scale show, can \"days\" \"years\". uniqueCombinations Whether restrict unique reference comparator comparisons. type Type table. Check supported types visOmopResults::tableType(). header Columns use header. See options availableTableColumns(result). groupColumn Columns group . See options availableTableColumns(result). hide Columns hide visualisation. See options availableTableColumns(result).","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/tableCohortTiming.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a summariseCohortTiming result into a visual table. — tableCohortTiming","text":"formatted table.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/tableCohortTiming.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format a summariseCohortTiming result into a visual table. — tableCohortTiming","text":"","code":"if (FALSE) { # \\dontrun{ library(CohortCharacteristics) library(duckdb) library(CDMConnector) library(DrugUtilisation)  con <- dbConnect(duckdb(), eunomiaDir()) cdm <- cdmFromCon(con, cdmSchem = \"main\", writeSchema = \"main\")  cdm <- generateIngredientCohortSet(   cdm = cdm,   name = \"my_cohort\",   ingredient = c(\"acetaminophen\", \"morphine\", \"warfarin\") )  timings <- summariseCohortTiming(cdm$my_cohort)  tableCohortTiming(timings, timeScale = \"years\")  cdmDisconnect(cdm) } # }"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/tableDoc.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper for consistent documentation of table. — tableDoc","title":"Helper for consistent documentation of table. — tableDoc","text":"Helper consistent documentation table.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/tableDoc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper for consistent documentation of table. — tableDoc","text":"type Type table. Check supported types visOmopResults::tableType(). header Columns use header. See options availableTableColumns(result). groupColumn Columns group . See options availableTableColumns(result). hide Columns hide visualisation. See options availableTableColumns(result).","code":""},{"path":[]},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/tableLargeScaleCharacteristics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a summarise_large_scale_characteristics object into a visual table. — tableLargeScaleCharacteristics","text":"","code":"tableLargeScaleCharacteristics(   result,   topConcepts = NULL,   type = \"gt\",   header = c(\"cdm_name\", \"cohort_name\", strataColumns(result), \"variable_level\"),   groupColumn = c(\"table_name\", \"type\", \"analysis\"),   hide = character() )"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/tableLargeScaleCharacteristics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a summarise_large_scale_characteristics object into a visual table. — tableLargeScaleCharacteristics","text":"result summarised_result object. topConcepts Number concepts restrict table. type Type table. Check supported types visOmopResults::tableType(). header Columns use header. See options availableTableColumns(result). groupColumn Columns group . See options availableTableColumns(result). hide Columns hide visualisation. See options availableTableColumns(result).","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/tableLargeScaleCharacteristics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a summarise_large_scale_characteristics object into a visual table. — tableLargeScaleCharacteristics","text":"formatted table.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/tableLargeScaleCharacteristics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format a summarise_large_scale_characteristics object into a visual table. — tableLargeScaleCharacteristics","text":"","code":"if (FALSE) { # \\dontrun{ library(duckdb) library(CDMConnector)  con <- dbConnect(duckdb(), eunomiaDir()) cdm <- cdmFromCon(con = con, cdmSchema = \"main\", writeSchema = \"main\") cdm <- generateConceptCohortSet(   cdm = cdm,   conceptSet = list(\"viral_pharyngitis\" = 4112343),   name = \"my_cohort\" )  result <- summariseLargeScaleCharacteristics(   cohort = cdm$my_cohort,   eventInWindow = \"condition_occurrence\",   episodeInWindow = \"drug_exposure\" )  tableLargeScaleCharacteristics(result)  cdmDisconnect(cdm) } # }"},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/timeScaleDoc.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper for consistent documentation of timeScale. — timeScaleDoc","title":"Helper for consistent documentation of timeScale. — timeScaleDoc","text":"Helper consistent documentation timeScale.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/timeScaleDoc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper for consistent documentation of timeScale. — timeScaleDoc","text":"timeScale Time scale show, can \"days\" \"years\".","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/uniqueCombinationsDoc.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper for consistent documentation of uniqueCombinations. — uniqueCombinationsDoc","title":"Helper for consistent documentation of uniqueCombinations. — uniqueCombinationsDoc","text":"Helper consistent documentation uniqueCombinations.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/reference/uniqueCombinationsDoc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper for consistent documentation of uniqueCombinations. — uniqueCombinationsDoc","text":"uniqueCombinations Whether restrict unique reference comparator comparisons.","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/news/index.html","id":"cohortcharacteristics-040","dir":"Changelog","previous_headings":"","what":"CohortCharacteristics 0.4.0","title":"CohortCharacteristics 0.4.0","text":"Update links darwin-eu-dev -> darwin-eu @catalamarti Typo plotCohortAttrition @martaalcalde uniqueCombination paramters work general way @catalamarti minimum 5 days x axis density plots @catalamarti improve documentation minimumFrequency @catalamarti add show argument plotCohortAttrition @catalamarti simplify code overlap fix edge case 0 overlap @catalamarti arrange ageGroups order provided summariseCharacteristics @catalamarti otherVariablesEstimates -> estimates summariseCharacteristics @catalamarti add overlapBy argument summariseCohortOverlap @catalamarti Compatibility visOmopResults 0.5.0 omopgenerics 0.4.0 @catalamarti add message different pkg versions @catalamarti make sure settings characters @catalamarti use requireEunomia CDMConnector 1.6.0 @catalamarti add benchmark function @catalamarti Consistent documentation @catalamarti Use subjects overlapBy = “subject_id” @catalamarti add cohortId LSC @catalamarti","code":""},{"path":"https://darwin-eu.github.io/CohortCharacteristics/news/index.html","id":"cohortcharacteristics-030","dir":"Changelog","previous_headings":"","what":"CohortCharacteristics 0.3.0","title":"CohortCharacteristics 0.3.0","text":"CRAN release: 2024-10-01 breaking change Complete refactor table* plot* functions following visOmopResults 0.4.0 release. summarise* functions output always ordered way. Added NEWS.md file track changes package.","code":""}]
